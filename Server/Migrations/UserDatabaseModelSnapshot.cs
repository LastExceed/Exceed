// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Server.Database;
using System;

namespace Server.Migrations
{
    [DbContext(typeof(UserDatabase))]
    partial class UserDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Server.Database.Ban", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ip");

                    b.Property<string>("Mac");

                    b.Property<string>("Reason");

                    b.Property<uint?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bans");
                });

            modelBuilder.Entity("Server.Database.Clan", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("Server.Database.Login", b =>
                {
                    b.Property<uint>("UserId");

                    b.Property<int>("Ip");

                    b.Property<string>("Mac");

                    b.HasKey("UserId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Server.Database.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<uint?>("ClanId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();
                    
                    b.Property<byte>("Permission");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Database.Ban", b =>
                {
                    b.HasOne("Server.Database.User", "User")
                        .WithMany("Bans")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Server.Database.Login", b =>
                {
                    b.HasOne("Server.Database.User", "User")
                        .WithOne("Login")
                        .HasForeignKey("Server.Database.Login", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Server.Database.User", b =>
                {
                    b.HasOne("Server.Database.Clan", "Clan")
                        .WithMany("Members")
                        .HasForeignKey("ClanId");
                });
#pragma warning restore 612, 618
        }
    }
}
